---
- block:
 - name: Remove apt config - http proxy
  file:
    dest: /etc/apt/apt.conf
    state: absent

 - name: Remove proxy from 70debconf
  lineinfile:
    dest: /etc/apt/apt.conf.d/70debconf
    state: absent
    regexp: '^\s*Acquire::http::Proxy'
  when: http_proxy is defined

 - name: Set apt http proxy
  lineinfile:
    dest: /etc/apt/apt.conf.d/70debconf
    line: 'Acquire::http::Proxy "{{ http_proxy }}";'
    create: yes
    owner: root
    group: root
    mode: 644
  when: http_proxy is defined

 - name: Set apt https proxy
  lineinfile:
    dest: /etc/apt/apt.conf.d/70debconf
    line: 'Acquire::https::Proxy "{{ http_proxy }}";'
  when: http_proxy is defined

 - name: Install some commonly used packages
  package: name={{ item }} state=present
  with_items:
    - apt-transport-https
    - unattended-upgrades
 when: ansible_facts['distribution'] == 'Debian'

- name: Set yum http proxy
  lineinfile:
   dest: /etc/yum.conf
   line: 'proxy={{ http_proxy }}'
 when: http_proxy is defined AND (ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'OracleLinux') 

- name: Install some commonly used packages
  package: name={{ item }} state=present
  with_items:
    - fail2ban
    - git
    - htop
    - tmux
    - vim

- name: Enable bash autocompete on Redhat based systems
  package: name={{ item }} state=present
  with_items:
    - bash-completion
    - bash-completion-extras
  when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'OracleLinux'
  
- block:
  - name: Install unattended update manager (YUM-CRON)
    package: name={{ item }} state=present
    with_items:
      - yum-cron
#  - name: configure yum-cron to autoinstall security updates only
#  - name: check if service is enabled
  when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'OracleLinux'

- name: Install management and observation agents
  package: name={{ item }} state=present
  with_items:
    - open-vm-tools

- name: set the server message of the day explaining ansible was the configuration management tool
  copy: src=motd
        dest=/etc/motd
        mode=0644

- name: disable ssh root logins without the use of a valid ssh key
  lineinfile: dest=/etc/ssh/sshd_config state=present regexp='^PermitRootLogin ' line='PermitRootLogin no'
  notify: restart sshd

# Too strict for now :(
#- name: disable ssh password logins for regular users
#  lineinfile: dest=/etc/ssh/sshd_config state=present regexp='^PasswordAuthentication ' line='PasswordAuthentication no'
#  notify: restart sshd

#  Hosts will be updated through standalone task, not by themselves
#- name: enable unattended security updates option
#  debconf: name=unattended-upgrades
#           question='unattended-upgrades/enable_auto_updates'
#           value='true'
#          vtype='boolean'
#  notify: reconfigure unattended-upgrades

- block: 
  - name: Update certificates for trust in local sshs
    copy: src="ca-certificates/{{item}}"
        dest="/usr/local/share/ca-certificates/{{item}}"
        mode=0644
    with_items:
      - MSpRootCA.crt
      - MSpServisCA02.crt
      - ThawteCAG1.crt #dumb dumb *.justice.cz
  - name: Update CA certificates
      command: /usr/sbin/update-ca-certificates
 when: ansible_facts['distribution'] == 'Debian'

- block: 
  - name: Update certificates for trust in local sshs (Redhat)
    copy: src="ca-certificates/{{item}}"
          dest="/etc/pki/ca-trust/source/anchors/{{item}}"
          mode=0644
    with_items:
        - MSpRootCA.crt
        - MSpServisCA02.crt
        - ThawteCAG1.crt #dumb dumb *.justice.cz

  - name: Update CA certificates (RedHat)
     command: /usr/bin/update-ca-trust extract
 when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'OracleLinux'